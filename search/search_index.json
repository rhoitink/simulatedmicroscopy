{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Simulated Microscopy documentation","text":"<p>Simulated Microscopy is a small python package to create a point source image from a set of 3D coordinates and do subsequent convolution and noisification of that image to emulate the confocal microscopy imaging process.</p> <p>The source can be found at https://github.com/rhoitink/simulatedmicroscopy.</p> <p>Have a look at how to install or how to use this package.</p>"},{"location":"api/","title":"API Reference","text":""},{"location":"api/#simulatedmicroscopy.Coordinates","title":"<code>Coordinates</code>","text":""},{"location":"api/#simulatedmicroscopy.input.Coordinates.__init__","title":"<code>__init__(coordinates)</code>","text":"<p>Wrapper to hold set of particle coordinates</p>"},{"location":"api/#simulatedmicroscopy.input.Coordinates.__init__--parameters","title":"Parameters","text":"list or np.ndarray <p>List of coordinates</p>"},{"location":"api/#simulatedmicroscopy.input.Coordinates.get_coordinates","title":"<code>get_coordinates(unit='\u00b5m')</code>","text":"<p>Get the array containing the particle coordinates</p>"},{"location":"api/#simulatedmicroscopy.input.Coordinates.get_coordinates--parameters","title":"Parameters","text":"str, optional <p>Unit to give the coordinates in. One of [nm, \u00b5m], by default \"\u00b5m\"</p>"},{"location":"api/#simulatedmicroscopy.input.Coordinates.get_coordinates--returns","title":"Returns","text":"<p>np.ndarray     Array of coordinates (N,3) shape</p>"},{"location":"api/#simulatedmicroscopy.input.Coordinates.scale","title":"<code>scale(factor=1.0)</code>","text":"<p>Update the list of coordinates by multiplication with <code>factor</code></p>"},{"location":"api/#simulatedmicroscopy.input.Coordinates.scale--parameters","title":"Parameters","text":"float, optional <p>Factor to scale the coordinates by, by default 1.</p>"},{"location":"api/#simulatedmicroscopy.input.Coordinates.scale--returns","title":"Returns","text":"<p>np.ndarray     Numpy array containing the scaled coordinates</p>"},{"location":"api/#simulatedmicroscopy.Cube","title":"<code>Cube</code>","text":"<p>             Bases: <code>BaseParticle</code></p>"},{"location":"api/#simulatedmicroscopy.particle.Cube.__init__","title":"<code>__init__(pixel_sizes, width, *args, **kwargs)</code>","text":"<p>Generate cubic particle</p>"},{"location":"api/#simulatedmicroscopy.particle.Cube.__init__--parameters","title":"Parameters","text":"list[float] <p>List of pixel sizes in meters in zyx order.</p> float <p>Edge length of the cube in meters.</p>"},{"location":"api/#simulatedmicroscopy.GaussianPSF","title":"<code>GaussianPSF</code>","text":"<p>             Bases: <code>Image</code></p>"},{"location":"api/#simulatedmicroscopy.psf.GaussianPSF.__init__","title":"<code>__init__(sigmas, pixel_sizes=[1e-07, 1e-08, 1e-08])</code>","text":"<p>Generate a 3D Gaussian with given sigmas to use as PSF</p>"},{"location":"api/#simulatedmicroscopy.psf.GaussianPSF.__init__--parameters","title":"Parameters","text":"list[float] <p>List of sigmas (in zyx order) to use for the Gaussian distribution, given in nanometers. Please note that this is given in nanometers, while the pixel size is given in meters.</p> Optional[list[float]], optional <p>List of pixel sizes (in zyx order) in meters, by default [1e-7, 1e-8, 1e-8].</p>"},{"location":"api/#simulatedmicroscopy.HuygensImage","title":"<code>HuygensImage</code>","text":"<p>             Bases: <code>Image</code></p>"},{"location":"api/#simulatedmicroscopy.image.HuygensImage.__init__","title":"<code>__init__(filename)</code>","text":"<p>Wrapper for Huygens-generated .h5 images Extends the <code>Image</code> class.</p>"},{"location":"api/#simulatedmicroscopy.image.HuygensImage.__init__--parameters","title":"Parameters","text":"str <p>Name of the Huygens-generated .h5 file</p>"},{"location":"api/#simulatedmicroscopy.HuygensPSF","title":"<code>HuygensPSF</code>","text":"<p>             Bases: <code>HuygensImage</code></p>"},{"location":"api/#simulatedmicroscopy.psf.HuygensPSF.__init__","title":"<code>__init__(filename)</code>","text":"<p>Generate PSF from Huygens .h5 file</p>"},{"location":"api/#simulatedmicroscopy.psf.HuygensPSF.__init__--parameters","title":"Parameters","text":"Union[str, Path] <p>Filename/path to the .h5 file</p>"},{"location":"api/#simulatedmicroscopy.Image","title":"<code>Image</code>","text":""},{"location":"api/#simulatedmicroscopy.image.Image.has_noise","title":"<code>has_noise = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Whether the image has undergone noise addition</p>"},{"location":"api/#simulatedmicroscopy.image.Image.is_convolved","title":"<code>is_convolved = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Whether the image has undergone convolution</p>"},{"location":"api/#simulatedmicroscopy.image.Image.is_downsampled","title":"<code>is_downsampled = False</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Whether the image has undergone downsampling</p>"},{"location":"api/#simulatedmicroscopy.image.Image.pixel_coordinates","title":"<code>pixel_coordinates = None</code>  <code>class-attribute</code> <code>instance-attribute</code>","text":"<p>Pixel coordinates (z,y,x) where particles are positioned</p>"},{"location":"api/#simulatedmicroscopy.image.Image.__init__","title":"<code>__init__(image, pixel_sizes=None, metadata=None)</code>","text":"<p>Initialize an image, used as a wrapper to hold both an N-dimensional image and its pixel sizes</p>"},{"location":"api/#simulatedmicroscopy.image.Image.__init__--parameters","title":"Parameters","text":"np.ndarray <p>2D or 3D numpy array containing pixel values, order should be (z,)y,x</p> list[float] <p>List/array of pixel sizes in meters, same length as number of image  dimensions. Order: (z,)y,x. By default 1.0 m/px for all dimensions.</p> dict <p>Place to store custom metadata about an image, will also be stored in .h5 file.</p>"},{"location":"api/#simulatedmicroscopy.image.Image.convolve","title":"<code>convolve(other)</code>","text":"<p>Convolve this image with another image (a PSF). The image is overwritten by the result of the convolution.</p>"},{"location":"api/#simulatedmicroscopy.image.Image.convolve--parameters","title":"Parameters","text":"type[Image] <p>The image to convolve this image with</p>"},{"location":"api/#simulatedmicroscopy.image.Image.convolve--returns","title":"Returns","text":"<p>type[Image]     The convolved image</p>"},{"location":"api/#simulatedmicroscopy.image.Image.create_particle_image","title":"<code>create_particle_image(coordinates, particle, edge_pixel_margin=0, *args, **kwargs)</code>  <code>classmethod</code>","text":"<p>Create image in which every point from the set of coordinates is represented by a given <code>particle</code></p>"},{"location":"api/#simulatedmicroscopy.image.Image.create_particle_image--parameters","title":"Parameters","text":"type[CoordinateSet] <p>Set of coordinates</p> list[BaseParticle] <p>Particle to use for image, will also use its pixel size for the final image</p> int <p>Number of extra empty pixels to apply as a margin around the edges of the image</p>"},{"location":"api/#simulatedmicroscopy.image.Image.create_particle_image--returns","title":"Returns","text":"<p>type[Image]     Genereated image</p>"},{"location":"api/#simulatedmicroscopy.image.Image.create_point_image","title":"<code>create_point_image(coordinates, pixel_sizes, *args, **kwargs)</code>  <code>classmethod</code>","text":"<p>Create point source image in which every point from the set of coordinates is represented by a single white pixel</p>"},{"location":"api/#simulatedmicroscopy.image.Image.create_point_image--parameters","title":"Parameters","text":"type[CoordinateSet] <p>Set of coordinates</p> list[float] <p>List of pixel sizes in meters, in zyx order.</p>"},{"location":"api/#simulatedmicroscopy.image.Image.create_point_image--returns","title":"Returns","text":"<p>type[Image]     Genereated image</p>"},{"location":"api/#simulatedmicroscopy.image.Image.downsample","title":"<code>downsample(downsample_factor)</code>","text":"<p>Downsample the image, decrease the pixel sizes by given factors. Overwrites current image and pixel sizes.</p>"},{"location":"api/#simulatedmicroscopy.image.Image.downsample--parameters","title":"Parameters","text":"list[int] <p>Factors to downsample each dimension by, in zyx order.</p>"},{"location":"api/#simulatedmicroscopy.image.Image.downsample--returns","title":"Returns","text":"<p>type[Image]     Resulting image, original image and pixelsizes are also overwritten</p>"},{"location":"api/#simulatedmicroscopy.image.Image.get_pixel_coordinates","title":"<code>get_pixel_coordinates()</code>","text":"<p>Get list of pixel indices containing particles</p>"},{"location":"api/#simulatedmicroscopy.image.Image.get_pixel_coordinates--returns","title":"Returns","text":"<p>np.ndarray     Numpy (N,3) array in zyx order with indices of pixels containing particles</p>"},{"location":"api/#simulatedmicroscopy.image.Image.get_pixel_sizes","title":"<code>get_pixel_sizes(dimensions=list('zyx'), unit='m')</code>","text":"<p>Get pixel sizes for given dimensions in given unit</p>"},{"location":"api/#simulatedmicroscopy.image.Image.get_pixel_sizes--parameters","title":"Parameters","text":"List of str, optional <p>Dimensions to get, one or more of (x, y, z), by default <code>[\"z\",\"y\",\"x\"]</code></p> str, optional <p>Unit to give the pixel size in. One of [m, cm, mm, \u00b5m, um, nm], by default \"m\".</p>"},{"location":"api/#simulatedmicroscopy.image.Image.get_pixel_sizes--returns","title":"Returns","text":"<p>list[float]     List of pixel sizes in given unit, in order of requested dimensions.</p>"},{"location":"api/#simulatedmicroscopy.image.Image.load_h5file","title":"<code>load_h5file(filename)</code>  <code>classmethod</code>","text":"<p>Load data from h5 file (custom format)</p>"},{"location":"api/#simulatedmicroscopy.image.Image.load_h5file--parameters","title":"Parameters","text":"str <p>Name of the file to load from</p>"},{"location":"api/#simulatedmicroscopy.image.Image.load_h5file--returns","title":"Returns","text":"<p>Image     Resulting image with correct pixel sizes</p>"},{"location":"api/#simulatedmicroscopy.image.Image.noisify","title":"<code>noisify(lam=1.0)</code>","text":"<p>Add Poisson noise to the image</p>"},{"location":"api/#simulatedmicroscopy.image.Image.noisify--parameters","title":"Parameters","text":"float, optional <p><code>lambda</code> parameter to pass onto the Poisson distribution. Expected number of events occurring in a fixed-time interval, by default 1.0</p>"},{"location":"api/#simulatedmicroscopy.image.Image.noisify--returns","title":"Returns","text":"<p>type[Image]     The image with noise added</p>"},{"location":"api/#simulatedmicroscopy.image.Image.save_h5file","title":"<code>save_h5file(filename, description=None)</code>","text":"<p>Save image as h5 file (custom format, not compatible with Huygens)</p>"},{"location":"api/#simulatedmicroscopy.image.Image.save_h5file--parameters","title":"Parameters","text":"str <p>Filename to save the file.</p> Optional[str], optional <p>Description to include in the file, by default None</p>"},{"location":"api/#simulatedmicroscopy.image.Image.save_h5file--returns","title":"Returns","text":"<p>bool     Whether the saving is successfull</p>"},{"location":"api/#simulatedmicroscopy.Shell","title":"<code>Shell</code>","text":"<p>             Bases: <code>Sphere</code></p>"},{"location":"api/#simulatedmicroscopy.particle.Shell.__init__","title":"<code>__init__(pixel_sizes, radius, shell_thickness, *args, **kwargs)</code>","text":"<p>Shell with given inner radius and shell thickness. Shell has constant intensity of 1., everything else is 0.</p>"},{"location":"api/#simulatedmicroscopy.particle.Shell.__init__--parameters","title":"Parameters","text":"list[float] <p>List of pixel sizes in meters, zyx order</p> float <p>Inner radius of the shell in meters, one float for all directions.</p> float <p>Thickness of the shell in meters, one float for all directions.</p>"},{"location":"api/#simulatedmicroscopy.Sphere","title":"<code>Sphere</code>","text":"<p>             Bases: <code>BaseParticle</code></p>"},{"location":"api/#simulatedmicroscopy.particle.Sphere.__init__","title":"<code>__init__(pixel_sizes, radius, *args, **kwargs)</code>","text":"<p>Sphere with given radius with constant intensity of 1.</p>"},{"location":"api/#simulatedmicroscopy.particle.Sphere.__init__--parameters","title":"Parameters","text":"list[float] <p>List of pixel sizes in meters, zyx order</p> float <p>Radius of the sphere in meters, one float for all directions.</p>"},{"location":"api/#simulatedmicroscopy.Spherocylinder","title":"<code>Spherocylinder</code>","text":"<p>             Bases: <code>BaseParticle</code></p>"},{"location":"api/#simulatedmicroscopy.particle.Spherocylinder.__init__","title":"<code>__init__(pixel_sizes, width, length, *args, **kwargs)</code>","text":"<p>Generation of a spherocylinder with given length and width, oriented along the z axis of the image. Note: the length is excluding the caps. No support for alternative orientation yet.</p>"},{"location":"api/#simulatedmicroscopy.particle.Spherocylinder.__init__--parameters","title":"Parameters","text":"list[float] <p>List of pixel sizes in zyx order in meters.</p> float <p>Width of the spherocylinder in meters</p> float <p>Length of the spherocylinder (excluding caps)</p>"},{"location":"example-usage/","title":"Example usage","text":"<p>The generation of a simulated microscopy image consists of several steps:</p> <ol> <li>Generation/loading of a point spread function (PSF)</li> <li>Generation of a particle image (PI) from a set of coordinates</li> <li>Convolution of the PI with the PSF</li> <li>Optional: adding noise and downsampling the image</li> </ol> <p>Each of the steps is explained below</p>"},{"location":"example-usage/#1-definition-of-a-point-spread-function","title":"1. Definition of a point spread function","text":"<p>There are two ways of getting a point spread function:</p>"},{"location":"example-usage/#11-reading-in-from-huygens-h5-file-format","title":"1.1 Reading in from Huygens <code>.h5</code> file format","text":"<p>Just pass the filename as an argument to the <code>HuygensPSF</code> class</p> <pre><code>from simulatedmicroscopy import HuygensPSF\npsf = HuygensPSF(\"filename.h5\")\n</code></pre>"},{"location":"example-usage/#12-generating-a-3d-gaussian-psf","title":"1.2 Generating a 3D Gaussian PSF","text":"<p>Pass the <code>sigma</code> values of the 3D Gaussian (in nanometers) to the the <code>GaussianPSF</code> together with the pixel_sizes (in meters). It's good to choose a smaller pixel size now and downsample your image later to reduce artifacts.</p> <pre><code>from simulatedmicroscopy import GaussianPSF\n# generate 3D Gaussian PSF with pixel sizes 50x10x10 nm^3 (z*y*x)\n# and the sigma values for z,y,x resp. are 600, 250, 250 nm\npsf = GaussianPSF([600., 250., 250.], pixel_sizes = [50e-9, 10e-9, 10e-9])\n</code></pre>"},{"location":"example-usage/#2-particle-image-generation","title":"2. Particle image generation","text":"<p>Usually you'd read in coordinates from a file, any (N,3) shaped <code>list</code>/<code>numpy.ndarray</code> will work here. Coordinates are given in <code>x,y,z</code> order.</p> <pre><code>from simulatedmicroscopy import Image, Coordinates, Sphere\n# read in coordinates from a file\n# for now, just some dummy coordinates\ncoords = Coordinates(\n[\n[1.,0.,0.],\n[0.,1.,0.],\n[0.,0.,1.],\n[2.,0.,0.],\n[0.,2.,0.],\n[0.,0.,2.],\n]\n)\n# create a spherical particle (radius = 100 nm) that will be placed at the coordinates\n# other options are a PointParticle and Shell, see `simulatedmicroscopy.particle` for more info\nparticle = Sphere(ps.get_pixel_sizes(), radius = 100e-9)\n# create image by placing this particle at set coordinates\nimage = Image.create_particle_image(coords, particle)\n</code></pre> <p>You now have a particle image in the <code>image</code> variable.</p> <p>The coordinates of the particles are stored as pixel indices (in <code>zyx</code> order), to retrieve them, run:</p> <pre><code>pixel_indices = image.get_pixel_coordinates()\nprint(pixel_indices[0]) # position of first particle\n</code></pre>"},{"location":"example-usage/#3-convolution-of-your-image-with-the-psf","title":"3. Convolution of your image with the PSF","text":"<p>When you have both the PI and PSF, you can convolve the first with the latter, by running:</p> <pre><code>image.convolve(psf)\n</code></pre> <p>You convolved image is now saved in the <code>image</code> variable.</p>"},{"location":"example-usage/#4-optional-adding-noise-and-downsampling-the-image","title":"4. Optional: adding noise and downsampling the image","text":"<p>Adding Poisson noise and downsampling the image to a lower pixel size is included as well and can be done as follows:</p> <pre><code># add Poisson noise\n# downsample by a factor 2 in z and factor 3 in xy\nimage.noisify().downsample([2, 3, 3])\n</code></pre> <p>The downsampling by a factor two along a dimension, means that the number of pixels along that dimension is divided by two, which leads to an increase of the pixel size by a factor or two.</p>"},{"location":"example-usage/#saving-your-image","title":"Saving your image","text":"<p>You can save your image at any step along the way by running</p> <pre><code>image.save_h5file(\"filename.h5\")\n</code></pre>"},{"location":"example-usage/#loading-the-image","title":"Loading the image","text":"<p>The image (and particle coordinates) can then later be retrieved again by:</p> <pre><code>from simulatedmicroscopy import Image\nimage = Image.load_h5file(\"filename.h5\")\npixel_indices = image.get_pixel_coordinates()\n</code></pre>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#using-pip","title":"Using pip","text":"<p>The package can directly be installed using <code>pip</code> by running the following command:</p> <pre><code>python -m pip install git+https://github.com/rhoitink/simulatedmicroscopy\n</code></pre>"},{"location":"installation/#upgrading","title":"Upgrading","text":"<p>To upgrade the package to a newer version, run the following command:</p> <pre><code>python -m pip install git+https://github.com/rhoitink/simulatedmicroscopy --upgrade\n</code></pre>"}]}